[project]
name = "tiny-sip"
version = "0.1.0"
description = "A tiny SIP client library"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "rich>=14.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tinysip"]

[dependency-groups]
dev = [
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.11",
    "taskipy>=1.14.1",
    "ty>=0.0.1a19",
]

# Ruff configuration
[tool.ruff]
line-length = 80
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = ["E203"]

# Type checker (ty)
## ty: usando configuração padrão (sem seção)

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--cov=tinysip",
    "--cov-report=term-missing",
    "--cov-fail-under=20",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Task runner (taskipy)
[tool.taskipy.tasks]
format = "ruff format ."
lint = "ruff check . --fix"
type = "ty check ."
test = "pytest -q"
test-v = "pytest -v"
test-cov = "pytest --cov=tinysip --cov-report=html --cov-report=term-missing"
test-cov-xml = "pytest --cov=tinysip --cov-report=xml"
test-fast = "pytest -x -q --disable-warnings --no-cov"
test-slow = "pytest -m slow --no-cov"
test-unit = "pytest -m unit --no-cov"
test-integration = "pytest -m integration --no-cov"
quality = "task format && task lint && task type && task test-fast"
security = "ruff check --select S --ignore S101 ."
clean = "rm -rf .pytest_cache .ruff_cache htmlcov .coverage build/ dist/ *.egg-info/"
all = "task clean && task quality && task test-cov && task security"
pre-commit = "pre-commit run --all-files"
pre-commit-install = "pre-commit install"
#app = "python app/main.py"
#docs-serve = "mkdocs serve -a 0.0.0.0:8001"
#docs-build = "mkdocs build --strict --clean --site-dir site"
